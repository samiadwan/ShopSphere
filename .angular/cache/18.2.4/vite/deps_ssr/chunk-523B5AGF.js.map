{
  "version": 3,
  "sources": ["../../../../../node_modules/@ngrx-addons/common/fesm2022/ngrx-addons-common.mjs"],
  "sourcesContent": ["import { pipe, ReplaySubject, first, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { Injectable, APP_BOOTSTRAP_LISTENER, inject } from '@angular/core';\nconst createMergeReducer = actionCheck => reducer => (state, action) => {\n  let newState = state;\n  if (actionCheck(action)) {\n    const {\n      features\n    } = action;\n    newState = state ? {\n      ...state\n    } : {};\n    Object.keys(features).forEach(key => {\n      newState[key] = {\n        ...newState[key],\n        ...features[key]\n      };\n    });\n  }\n  return reducer(newState, action);\n};\n\n/**\n * Exclude keys from the state\n */\nconst excludeKeys = keys => {\n  return pipe(map(state => Object.keys(state).reduce((toSave, key) => {\n    if (!keys.includes(key)) {\n      toSave[key] = state[key];\n    }\n    return toSave;\n  }, {})));\n};\n\n/**\n * Include keys from the state\n */\nconst includeKeys = keys => {\n  return pipe(map(state => Object.keys(state).reduce((toSave, key) => {\n    if (keys.includes(key)) {\n      toSave[key] = state[key];\n    }\n    return toSave;\n  }, {})));\n};\n\n/**\n * Check if states are equal\n */\nconst isEqual = (prev, next) => {\n  if (prev === next) {\n    return true;\n  }\n  if (!prev || !next || typeof prev !== 'object' || typeof next !== 'object') {\n    return false;\n  }\n  const prevSlices = Object.keys(prev);\n  const nextSlices = Object.keys(next);\n  if (prevSlices.length !== nextSlices.length) {\n    return false;\n  }\n  if (prevSlices.some(slice => !isEqual(prev[slice], next[slice]))) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Interface for strategies implementing way of initialization\n * of the state.\n */\nclass InitializationStrategy {}\n/**\n * Strategy initializing state after whole angular application is initialized.\n */\nclass AfterAppInit {\n  #initialized = new ReplaySubject(1);\n  when() {\n    return this.#initialized.pipe(first());\n  }\n  /**\n   * Mark strategy as initialized. Meant to be called once whole angular\n   * application is initialized.\n   */\n  markAsInitialized() {\n    this.#initialized.next();\n  }\n  /**\n   * Cleanup resources.\n   */\n  ngOnDestroy() {\n    this.#initialized.complete();\n  }\n  static {\n    this.ɵfac = function AfterAppInit_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AfterAppInit)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AfterAppInit,\n      factory: AfterAppInit.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AfterAppInit, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst afterAppInitProvider = {\n  provide: APP_BOOTSTRAP_LISTENER,\n  multi: true,\n  useFactory: (afterInit = inject(AfterAppInit)) => () => {\n    afterInit.markAsInitialized();\n  }\n};\n/**\n * Strategy initializing state as soon as it possible, before angular\n * application is initialized.\n */\nclass BeforeAppInit {\n  when() {\n    return of(void 0);\n  }\n  static {\n    this.ɵfac = function BeforeAppInit_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BeforeAppInit)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BeforeAppInit,\n      factory: BeforeAppInit.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BeforeAppInit, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AfterAppInit, BeforeAppInit, InitializationStrategy, afterAppInitProvider, createMergeReducer, excludeKeys, includeKeys, isEqual };\n"],
  "mappings": "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",
  "names": []
}
