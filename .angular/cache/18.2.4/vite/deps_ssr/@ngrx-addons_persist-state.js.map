{
  "version": 3,
  "sources": ["../../../../../node_modules/@ngrx-addons/persist-state/fesm2022/ngrx-addons-persist-state.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, makeEnvironmentProviders, inject, ENVIRONMENT_INITIALIZER, Optional, SkipSelf } from '@angular/core';\nimport * as i3 from '@ngrx-addons/common';\nimport { isEqual, createMergeReducer, afterAppInitProvider, BeforeAppInit } from '@ngrx-addons/common';\nimport * as i1 from '@ngrx/store';\nimport { createAction, props, META_REDUCERS } from '@ngrx/store';\nimport { Subject, of, merge, from, filter, tap, defaultIfEmpty, map, distinctUntilChanged, skip, switchMap, takeUntil } from 'rxjs';\nconst REHYDRATE = '@ngrx-addons/persist-state/rehydrate';\nconst storeRehydrateAction = createAction(REHYDRATE,\n// eslint-disable-next-line @ngrx/prefer-inline-action-props\nprops());\nconst rehydrate = storeRehydrateAction;\nclass PersistStateRootConfig {}\nclass PersistStateFeatureConfig {}\n/**\n * Injection token for the strategy used to initialize the state.\n */\nconst PersistStateStrategy = new InjectionToken('persist-state-init-strategy');\n/**\n * Injection token for the list of states to persist.\n */\nconst PERSIST_STATE_FEATURE_CONFIGS = new InjectionToken('persist-state-feature-configs');\nconst ROOT_PERSIST_STORE = new InjectionToken('persist-state-root');\nconst FEATURE_PERSIST_STATE = new InjectionToken('persist-state-feature');\nconst rootState = 'root';\nclass PersistState {\n  #rootConfig;\n  #features = new Map();\n  #destroyer = new Subject();\n  constructor(store, strategy, rootConfig) {\n    this.store = store;\n    this.strategy = strategy;\n    const {\n      states,\n      storageKeyPrefix,\n      ...restConfig\n    } = rootConfig;\n    const keyPrefix = storageKeyPrefix ? `${storageKeyPrefix}-` : '';\n    this.#rootConfig = {\n      ...restConfig,\n      storageKeyPrefix: keyPrefix,\n      states\n    };\n  }\n  addRoot() {\n    const merged = this.#rootConfig.states?.map(state => ({\n      ...this.defaultStateConfig(state.key),\n      ...state,\n      key: state.key\n    })) ?? [];\n    this.listenOnStates(merged, rootState).subscribe();\n  }\n  addFeature(feature) {\n    if (this.#features.has(feature.key)) {\n      return;\n    }\n    // Remove in case of re-adding\n    this.removeFeature(feature.key);\n    this.#features.set(feature.key, true);\n    const merged = feature.states.map(state => ({\n      ...this.defaultStateConfig(feature.key),\n      ...state,\n      key: feature.key\n    }));\n    this.listenOnStates(merged, feature.key).subscribe();\n  }\n  removeFeature(key) {\n    this.#destroyer.next(key);\n    this.#features.delete(key);\n  }\n  ngOnDestroy() {\n    this.#features.forEach((_, key) => {\n      this.removeFeature(key);\n    });\n    this.#destroyer.next(rootState);\n    this.#destroyer.complete();\n  }\n  defaultStateConfig(key) {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageKey: `${this.#rootConfig.storageKeyPrefix}${key}@store`,\n      source: state => state,\n      runGuard: () => typeof window !== 'undefined',\n      migrations: [],\n      skip: 1\n    };\n  }\n  listenOnStates(states, feature) {\n    if (states.length === 0) {\n      return of(undefined);\n    }\n    return merge(...states.map(state => {\n      if (!state.runGuard()) {\n        return of(undefined);\n      }\n      const storage = typeof state.storage === 'function' ? state.storage() : state.storage;\n      return merge(\n      // Restore state from storage\n      this.rehydrateWhen(() => from(storage.getItem(state.storageKey))).pipe(filter(value => !!value), tap(value => {\n        // Run migrations if defined\n        if (state.migrations.length) {\n          value = this.runMigrations(value, state.migrations);\n        }\n        this.store.dispatch(rehydrate({\n          features: {\n            [state.key]: value\n          }\n        }));\n      }), defaultIfEmpty(undefined)),\n      // Save state to storage\n      state.source(this.store.pipe(map(storeState => storeState[state.key]))).pipe(distinctUntilChanged(isEqual), skip(state.skip), switchMap(value => storage.setItem(state.storageKey, value))));\n    })).pipe(takeUntil(this.#destroyer.pipe(filter(destroyFeature => destroyFeature === feature))));\n  }\n  runMigrations(value, migrations) {\n    migrations.forEach(migration => {\n      const version = value[migration.versionKey ?? 'version'];\n      if (migration.version === version) {\n        value = migration.migrate(value);\n      }\n    });\n    return value;\n  }\n  rehydrateWhen(input) {\n    return this.strategy.when().pipe(switchMap(() => input()));\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PersistState_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PersistState)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(PersistStateStrategy), i0.ɵɵinject(PersistStateRootConfig));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PersistState,\n      factory: PersistState.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistState, [{\n    type: Injectable\n  }], () => [{\n    type: i1.Store\n  }, {\n    type: i3.InitializationStrategy,\n    decorators: [{\n      type: Inject,\n      args: [PersistStateStrategy]\n    }]\n  }, {\n    type: PersistStateRootConfig\n  }], null);\n})();\nclass PersistStateFeature {\n  constructor(persistState, configs) {\n    this.persistState = persistState;\n    this.configs = configs;\n  }\n  addFeatures() {\n    this.configs.forEach(config => {\n      this.persistState.addFeature(config);\n    });\n  }\n  ngOnDestroy() {\n    this.configs.forEach(config => {\n      this.persistState.removeFeature(config.key);\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PersistStateFeature_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PersistStateFeature)(i0.ɵɵinject(PersistState), i0.ɵɵinject(PERSIST_STATE_FEATURE_CONFIGS));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PersistStateFeature,\n      factory: PersistStateFeature.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistStateFeature, [{\n    type: Injectable\n  }], () => [{\n    type: PersistState\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PERSIST_STATE_FEATURE_CONFIGS]\n    }]\n  }], null);\n})();\nclass PersistStateFeatureModule {\n  constructor(state) {\n    state.addFeatures();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PersistStateFeatureModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PersistStateFeatureModule)(i0.ɵɵinject(PersistStateFeature));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: PersistStateFeatureModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistStateFeatureModule, [{\n    type: NgModule\n  }], () => [{\n    type: PersistStateFeature\n  }], null);\n})();\nconst isRehydrateAction = action => action.type === REHYDRATE;\nconst persistStateReducer = createMergeReducer(isRehydrateAction);\nconst _providePersistStore = (config = {}) => {\n  return [PersistState, {\n    provide: PersistStateRootConfig,\n    useValue: config\n  }, {\n    provide: META_REDUCERS,\n    useValue: persistStateReducer,\n    multi: true\n  }, afterAppInitProvider, {\n    provide: PersistStateStrategy,\n    useExisting: config.strategy ?? BeforeAppInit\n  }];\n};\nconst _providePersistState = config => {\n  return [{\n    provide: PERSIST_STATE_FEATURE_CONFIGS,\n    useValue: config,\n    multi: true\n  }, PersistStateFeature];\n};\n/**\n * Persists the global store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing the global Persist Store\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideStore(), providePersistStore()],\n * });\n * ```\n */\nconst providePersistStore = (config = {}) => {\n  return makeEnvironmentProviders([..._providePersistStore(config), {\n    provide: ROOT_PERSIST_STORE,\n    useFactory: () => {\n      inject(PersistState).addRoot();\n    }\n  }, {\n    provide: ENVIRONMENT_INITIALIZER,\n    multi: true,\n    useFactory: () => () => inject(ROOT_PERSIST_STORE)\n  }]);\n};\n/**\n * Persists additional slices of state.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Persist Store Features\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideState('books', booksReducer), providePersistState({ key: 'books' })],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nconst providePersistState = config => {\n  return makeEnvironmentProviders([..._providePersistState(config), {\n    provide: FEATURE_PERSIST_STATE,\n    useFactory: () => {\n      inject(PersistStateFeature).addFeatures();\n    }\n  }, {\n    provide: ENVIRONMENT_INITIALIZER,\n    multi: true,\n    useFactory: () => () => inject(FEATURE_PERSIST_STATE)\n  }]);\n};\nclass PersistStateRootModule {\n  constructor(state, parentModule) {\n    if (parentModule) {\n      throw new Error('PersistStateRootModule is already loaded. Import it only once at AppModule!');\n    }\n    state.addRoot();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PersistStateRootModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PersistStateRootModule)(i0.ɵɵinject(PersistState), i0.ɵɵinject(PersistStateRootModule, 12));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: PersistStateRootModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistStateRootModule, [{\n    type: NgModule\n  }], () => [{\n    type: PersistState\n  }, {\n    type: PersistStateRootModule,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }], null);\n})();\nclass PersistStateModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: PersistStateRootModule,\n      providers: [..._providePersistStore(config)]\n    };\n  }\n  static forFeature(config) {\n    return {\n      ngModule: PersistStateFeatureModule,\n      providers: [..._providePersistState(config)]\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PersistStateModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PersistStateModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: PersistStateModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PersistStateModule, [{\n    type: NgModule\n  }], null, null);\n})();\nconst noopStorage = {\n  getItem: () => of(null),\n  setItem: () => of(true),\n  removeItem: () => of(true)\n};\nconst createStorage = storage => {\n  if (!storage) {\n    return noopStorage;\n  }\n  return {\n    getItem: key => {\n      const v = storage.getItem(key);\n      return of(v ? JSON.parse(v) : v);\n    },\n    setItem: (key, value) => {\n      storage.setItem(key, JSON.stringify(value));\n      return of(true);\n    },\n    // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n    removeItem: key => {\n      storage.removeItem(key);\n      return of(true);\n    }\n  };\n};\n// we need to wrap the access to window.localStorage and window.sessionStorage in a try catch\n// because localStorage can be disabled, or be denied by a security rule\n// as soon as we access the property, it throws an error\nconst tryGetLocalStorage = () => {\n  try {\n    if (typeof localStorage !== 'undefined') {\n      return localStorage;\n    }\n  } catch {\n    // Ignore error\n  }\n  return undefined;\n};\nconst localStorageStrategy = createStorage(tryGetLocalStorage());\nconst tryGetSessionStorage = () => {\n  try {\n    if (typeof sessionStorage !== 'undefined') {\n      return sessionStorage;\n    }\n  } catch {\n    // Ignore error\n  }\n  return undefined;\n};\nconst sessionStorageStrategy = createStorage(tryGetSessionStorage());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PersistState, PersistStateFeatureConfig, PersistStateFeatureModule, PersistStateModule, PersistStateRootConfig, PersistStateRootModule, REHYDRATE, createStorage, localStorageStrategy, providePersistState, providePersistStore, rehydrate, sessionStorageStrategy, storeRehydrateAction };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,kBAA6H;AAC7H,IAAM,YAAY;AAClB,IAAM,uBAAuB;AAAA,EAAa;AAAA;AAAA,EAE1C,MAAM;AAAC;AACP,IAAM,YAAY;AAClB,IAAM,yBAAN,MAA6B;AAAC;AAC9B,IAAM,4BAAN,MAAgC;AAAC;AAIjC,IAAM,uBAAuB,IAAI,eAAe,6BAA6B;AAI7E,IAAM,gCAAgC,IAAI,eAAe,+BAA+B;AACxF,IAAM,qBAAqB,IAAI,eAAe,oBAAoB;AAClE,IAAM,wBAAwB,IAAI,eAAe,uBAAuB;AACxE,IAAM,YAAY;AAxBlB;AAyBA,IAAM,gBAAN,MAAM,cAAa;AAAA,EAIjB,YAAY,OAAO,UAAU,YAAY;AAHzC;AACA,kCAAY,oBAAI,IAAI;AACpB,mCAAa,IAAI,oBAAQ;AAEvB,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,UAII,iBAHF;AAAA;AAAA,MACA;AAAA,IAlCN,IAoCQ,IADC,uBACD,IADC;AAAA,MAFH;AAAA,MACA;AAAA;AAGF,UAAM,YAAY,mBAAmB,GAAG,gBAAgB,MAAM;AAC9D,uBAAK,aAAc,iCACd,aADc;AAAA,MAEjB,kBAAkB;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAAA,EACA,UAAU;AACR,UAAM,SAAS,mBAAK,aAAY,QAAQ,IAAI,WAAU,gDACjD,KAAK,mBAAmB,MAAM,GAAG,IACjC,QAFiD;AAAA,MAGpD,KAAK,MAAM;AAAA,IACb,EAAE,KAAK,CAAC;AACR,SAAK,eAAe,QAAQ,SAAS,EAAE,UAAU;AAAA,EACnD;AAAA,EACA,WAAW,SAAS;AAClB,QAAI,mBAAK,WAAU,IAAI,QAAQ,GAAG,GAAG;AACnC;AAAA,IACF;AAEA,SAAK,cAAc,QAAQ,GAAG;AAC9B,uBAAK,WAAU,IAAI,QAAQ,KAAK,IAAI;AACpC,UAAM,SAAS,QAAQ,OAAO,IAAI,WAAU,gDACvC,KAAK,mBAAmB,QAAQ,GAAG,IACnC,QAFuC;AAAA,MAG1C,KAAK,QAAQ;AAAA,IACf,EAAE;AACF,SAAK,eAAe,QAAQ,QAAQ,GAAG,EAAE,UAAU;AAAA,EACrD;AAAA,EACA,cAAc,KAAK;AACjB,uBAAK,YAAW,KAAK,GAAG;AACxB,uBAAK,WAAU,OAAO,GAAG;AAAA,EAC3B;AAAA,EACA,cAAc;AACZ,uBAAK,WAAU,QAAQ,CAAC,GAAG,QAAQ;AACjC,WAAK,cAAc,GAAG;AAAA,IACxB,CAAC;AACD,uBAAK,YAAW,KAAK,SAAS;AAC9B,uBAAK,YAAW,SAAS;AAAA,EAC3B;AAAA,EACA,mBAAmB,KAAK;AACtB,WAAO;AAAA;AAAA,MAEL,YAAY,GAAG,mBAAK,aAAY,gBAAgB,GAAG,GAAG;AAAA,MACtD,QAAQ,WAAS;AAAA,MACjB,UAAU,MAAM,OAAO,WAAW;AAAA,MAClC,YAAY,CAAC;AAAA,MACb,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,eAAe,QAAQ,SAAS;AAC9B,QAAI,OAAO,WAAW,GAAG;AACvB,iBAAO,gBAAG,MAAS;AAAA,IACrB;AACA,eAAO,mBAAM,GAAG,OAAO,IAAI,WAAS;AAClC,UAAI,CAAC,MAAM,SAAS,GAAG;AACrB,mBAAO,gBAAG,MAAS;AAAA,MACrB;AACA,YAAM,UAAU,OAAO,MAAM,YAAY,aAAa,MAAM,QAAQ,IAAI,MAAM;AAC9E,iBAAO;AAAA;AAAA,QAEP,KAAK,cAAc,UAAM,kBAAK,QAAQ,QAAQ,MAAM,UAAU,CAAC,CAAC,EAAE,SAAK,oBAAO,WAAS,CAAC,CAAC,KAAK,OAAG,iBAAI,WAAS;AAE5G,cAAI,MAAM,WAAW,QAAQ;AAC3B,oBAAQ,KAAK,cAAc,OAAO,MAAM,UAAU;AAAA,UACpD;AACA,eAAK,MAAM,SAAS,UAAU;AAAA,YAC5B,UAAU;AAAA,cACR,CAAC,MAAM,GAAG,GAAG;AAAA,YACf;AAAA,UACF,CAAC,CAAC;AAAA,QACJ,CAAC,OAAG,4BAAe,MAAS,CAAC;AAAA;AAAA,QAE7B,MAAM,OAAO,KAAK,MAAM,SAAK,iBAAI,gBAAc,WAAW,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,SAAK,kCAAqB,OAAO,OAAG,kBAAK,MAAM,IAAI,OAAG,uBAAU,WAAS,QAAQ,QAAQ,MAAM,YAAY,KAAK,CAAC,CAAC;AAAA,MAAC;AAAA,IAC7L,CAAC,CAAC,EAAE,SAAK,uBAAU,mBAAK,YAAW,SAAK,oBAAO,oBAAkB,mBAAmB,OAAO,CAAC,CAAC,CAAC;AAAA,EAChG;AAAA,EACA,cAAc,OAAO,YAAY;AAC/B,eAAW,QAAQ,eAAa;AAC9B,YAAM,UAAU,MAAM,UAAU,cAAc,SAAS;AACvD,UAAI,UAAU,YAAY,SAAS;AACjC,gBAAQ,UAAU,QAAQ,KAAK;AAAA,MACjC;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,cAAc,OAAO;AACnB,WAAO,KAAK,SAAS,KAAK,EAAE,SAAK,uBAAU,MAAM,MAAM,CAAC,CAAC;AAAA,EAC3D;AAcF;AAhHE;AACA;AACA;AAmGE,cAAK,OAAO,SAAS,qBAAqB,mBAAmB;AAC3D,SAAO,KAAK,qBAAqB,eAAiB,SAAY,KAAK,GAAM,SAAS,oBAAoB,GAAM,SAAS,sBAAsB,CAAC;AAC9I;AAIA,cAAK,QAA0B,mBAAmB;AAAA,EAChD,OAAO;AAAA,EACP,SAAS,cAAa;AACxB,CAAC;AA/GL,IAAM,eAAN;AAAA,CAkHC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,IACT,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,IAC7B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,EACR,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,uBAAN,MAAM,qBAAoB;AAAA,EACxB,YAAY,cAAc,SAAS;AACjC,SAAK,eAAe;AACpB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,cAAc;AACZ,SAAK,QAAQ,QAAQ,YAAU;AAC7B,WAAK,aAAa,WAAW,MAAM;AAAA,IACrC,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,QAAQ,QAAQ,YAAU;AAC7B,WAAK,aAAa,cAAc,OAAO,GAAG;AAAA,IAC5C,CAAC;AAAA,EACH;AAcF;AAXI,qBAAK,OAAO,SAAS,4BAA4B,mBAAmB;AAClE,SAAO,KAAK,qBAAqB,sBAAwB,SAAS,YAAY,GAAM,SAAS,6BAA6B,CAAC;AAC7H;AAIA,qBAAK,QAA0B,mBAAmB;AAAA,EAChD,OAAO;AAAA,EACP,SAAS,qBAAoB;AAC/B,CAAC;AA1BL,IAAM,sBAAN;AAAA,CA6BC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,qBAAqB,CAAC;AAAA,IAC5F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,EACR,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,6BAA6B;AAAA,IACtC,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,6BAAN,MAAM,2BAA0B;AAAA,EAC9B,YAAY,OAAO;AACjB,UAAM,YAAY;AAAA,EACpB;AAiBF;AAdI,2BAAK,OAAO,SAAS,kCAAkC,mBAAmB;AACxE,SAAO,KAAK,qBAAqB,4BAA8B,SAAS,mBAAmB,CAAC;AAC9F;AAIA,2BAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AACR,CAAC;AAID,2BAAK,OAAyB,iBAAiB,CAAC,CAAC;AAlBrD,IAAM,4BAAN;AAAA,CAqBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,2BAA2B,CAAC;AAAA,IAClG,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,EACR,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,oBAAoB,YAAU,OAAO,SAAS;AACpD,IAAM,sBAAsB,mBAAmB,iBAAiB;AAChE,IAAM,uBAAuB,CAAC,SAAS,CAAC,MAAM;AAC5C,SAAO,CAAC,cAAc;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,EACZ,GAAG;AAAA,IACD,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,EACT,GAAG,sBAAsB;AAAA,IACvB,SAAS;AAAA,IACT,aAAa,OAAO,YAAY;AAAA,EAClC,CAAC;AACH;AACA,IAAM,uBAAuB,YAAU;AACrC,SAAO,CAAC;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,EACT,GAAG,mBAAmB;AACxB;AAeA,IAAM,sBAAsB,CAAC,SAAS,CAAC,MAAM;AAC3C,SAAO,yBAAyB,CAAC,GAAG,qBAAqB,MAAM,GAAG;AAAA,IAChE,SAAS;AAAA,IACT,YAAY,MAAM;AAChB,aAAO,YAAY,EAAE,QAAQ;AAAA,IAC/B;AAAA,EACF,GAAG;AAAA,IACD,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY,MAAM,MAAM,OAAO,kBAAkB;AAAA,EACnD,CAAC,CAAC;AACJ;AAsBA,IAAM,sBAAsB,YAAU;AACpC,SAAO,yBAAyB,CAAC,GAAG,qBAAqB,MAAM,GAAG;AAAA,IAChE,SAAS;AAAA,IACT,YAAY,MAAM;AAChB,aAAO,mBAAmB,EAAE,YAAY;AAAA,IAC1C;AAAA,EACF,GAAG;AAAA,IACD,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY,MAAM,MAAM,OAAO,qBAAqB;AAAA,EACtD,CAAC,CAAC;AACJ;AACA,IAAM,0BAAN,MAAM,wBAAuB;AAAA,EAC3B,YAAY,OAAO,cAAc;AAC/B,QAAI,cAAc;AAChB,YAAM,IAAI,MAAM,6EAA6E;AAAA,IAC/F;AACA,UAAM,QAAQ;AAAA,EAChB;AAiBF;AAdI,wBAAK,OAAO,SAAS,+BAA+B,mBAAmB;AACrE,SAAO,KAAK,qBAAqB,yBAA2B,SAAS,YAAY,GAAM,SAAS,yBAAwB,EAAE,CAAC;AAC7H;AAIA,wBAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AACR,CAAC;AAID,wBAAK,OAAyB,iBAAiB,CAAC,CAAC;AArBrD,IAAM,yBAAN;AAAA,CAwBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,wBAAwB,CAAC;AAAA,IAC/F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,EACR,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,sBAAN,MAAM,oBAAmB;AAAA,EACvB,OAAO,QAAQ,SAAS,CAAC,GAAG;AAC1B,WAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC,GAAG,qBAAqB,MAAM,CAAC;AAAA,IAC7C;AAAA,EACF;AAAA,EACA,OAAO,WAAW,QAAQ;AACxB,WAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC,GAAG,qBAAqB,MAAM,CAAC;AAAA,IAC7C;AAAA,EACF;AAiBF;AAdI,oBAAK,OAAO,SAAS,2BAA2B,mBAAmB;AACjE,SAAO,KAAK,qBAAqB,qBAAoB;AACvD;AAIA,oBAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AACR,CAAC;AAID,oBAAK,OAAyB,iBAAiB,CAAC,CAAC;AA3BrD,IAAM,qBAAN;AAAA,CA8BC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,cAAc;AAAA,EAClB,SAAS,UAAM,gBAAG,IAAI;AAAA,EACtB,SAAS,UAAM,gBAAG,IAAI;AAAA,EACtB,YAAY,UAAM,gBAAG,IAAI;AAC3B;AACA,IAAM,gBAAgB,aAAW;AAC/B,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL,SAAS,SAAO;AACd,YAAM,IAAI,QAAQ,QAAQ,GAAG;AAC7B,iBAAO,gBAAG,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;AAAA,IACjC;AAAA,IACA,SAAS,CAAC,KAAK,UAAU;AACvB,cAAQ,QAAQ,KAAK,KAAK,UAAU,KAAK,CAAC;AAC1C,iBAAO,gBAAG,IAAI;AAAA,IAChB;AAAA;AAAA,IAEA,YAAY,SAAO;AACjB,cAAQ,WAAW,GAAG;AACtB,iBAAO,gBAAG,IAAI;AAAA,IAChB;AAAA,EACF;AACF;AAIA,IAAM,qBAAqB,MAAM;AAC/B,MAAI;AACF,QAAI,OAAO,iBAAiB,aAAa;AACvC,aAAO;AAAA,IACT;AAAA,EACF,QAAQ;AAAA,EAER;AACA,SAAO;AACT;AACA,IAAM,uBAAuB,cAAc,mBAAmB,CAAC;AAC/D,IAAM,uBAAuB,MAAM;AACjC,MAAI;AACF,QAAI,OAAO,mBAAmB,aAAa;AACzC,aAAO;AAAA,IACT;AAAA,EACF,QAAQ;AAAA,EAER;AACA,SAAO;AACT;AACA,IAAM,yBAAyB,cAAc,qBAAqB,CAAC;",
  "names": []
}
