import { Inject, Injectable } from '@angular/core';
import { PersistState } from './persist-state';
import { PERSIST_STATE_FEATURE_CONFIGS } from './persist-state.config';
import * as i0 from "@angular/core";
import * as i1 from "./persist-state";
export class PersistStateFeature {
    constructor(persistState, configs) {
        this.persistState = persistState;
        this.configs = configs;
    }
    addFeatures() {
        this.configs.forEach((config) => {
            this.persistState.addFeature(config);
        });
    }
    ngOnDestroy() {
        this.configs.forEach((config) => {
            this.persistState.removeFeature(config.key);
        });
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: PersistStateFeature, deps: [{ token: i1.PersistState }, { token: PERSIST_STATE_FEATURE_CONFIGS }], target: i0.ɵɵFactoryTarget.Injectable }); }
    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: PersistStateFeature }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: PersistStateFeature, decorators: [{
            type: Injectable
        }], ctorParameters: () => [{ type: i1.PersistState }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PERSIST_STATE_FEATURE_CONFIGS]
                }] }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc2lzdC1zdGF0ZS5mZWF0dXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9wZXJzaXN0LXN0YXRlL3NyYy9saWIvcGVyc2lzdC1zdGF0ZS5mZWF0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBR3ZFLE1BQU0sT0FBTyxtQkFBbUI7SUFDOUIsWUFDbUIsWUFBMEIsRUFFMUIsT0FBNkM7UUFGN0MsaUJBQVksR0FBWixZQUFZLENBQWM7UUFFMUIsWUFBTyxHQUFQLE9BQU8sQ0FBc0M7SUFDN0QsQ0FBQztJQUVHLFdBQVc7UUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUM5QixJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxXQUFXO1FBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztpSUFqQlUsbUJBQW1CLDhDQUdwQiw2QkFBNkI7cUlBSDVCLG1CQUFtQjs7MkZBQW5CLG1CQUFtQjtrQkFEL0IsVUFBVTs7MEJBSU4sTUFBTTsyQkFBQyw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQZXJzaXN0U3RhdGUgfSBmcm9tICcuL3BlcnNpc3Qtc3RhdGUnO1xuaW1wb3J0IHR5cGUgeyBQZXJzaXN0U3RhdGVGZWF0dXJlQ29uZmlnIH0gZnJvbSAnLi9wZXJzaXN0LXN0YXRlLmNvbmZpZyc7XG5pbXBvcnQgeyBQRVJTSVNUX1NUQVRFX0ZFQVRVUkVfQ09ORklHUyB9IGZyb20gJy4vcGVyc2lzdC1zdGF0ZS5jb25maWcnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGVyc2lzdFN0YXRlRmVhdHVyZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgcGVyc2lzdFN0YXRlOiBQZXJzaXN0U3RhdGUsXG4gICAgQEluamVjdChQRVJTSVNUX1NUQVRFX0ZFQVRVUkVfQ09ORklHUylcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNvbmZpZ3M6IFBlcnNpc3RTdGF0ZUZlYXR1cmVDb25maWc8dW5rbm93bj5bXSxcbiAgKSB7fVxuXG4gIHB1YmxpYyBhZGRGZWF0dXJlcygpOiB2b2lkIHtcbiAgICB0aGlzLmNvbmZpZ3MuZm9yRWFjaCgoY29uZmlnKSA9PiB7XG4gICAgICB0aGlzLnBlcnNpc3RTdGF0ZS5hZGRGZWF0dXJlKGNvbmZpZyk7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5jb25maWdzLmZvckVhY2goKGNvbmZpZykgPT4ge1xuICAgICAgdGhpcy5wZXJzaXN0U3RhdGUucmVtb3ZlRmVhdHVyZShjb25maWcua2V5KTtcbiAgICB9KTtcbiAgfVxufVxuIl19