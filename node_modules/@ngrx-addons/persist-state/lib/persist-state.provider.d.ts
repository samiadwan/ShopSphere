import { type EnvironmentProviders, type Provider } from '@angular/core';
import type { Action, ActionReducerMap } from '@ngrx/store';
import type { PersistStateFeatureConfig } from './persist-state.config';
import { PersistStateRootConfig } from './persist-state.config';
export declare const _providePersistStore: <T extends ActionReducerMap<any, V>, V extends Action<string> = Action<string>>(config?: PersistStateRootConfig<T, V>) => Provider[];
export declare const _providePersistState: <T>(config: PersistStateFeatureConfig<T>) => Provider[];
/**
 * Persists the global store.
 * These providers cannot be used at the component level.
 *
 * @usageNotes
 *
 * ### Providing the global Persist Store
 *
 * ```ts
 * bootstrapApplication(AppComponent, {
 *   providers: [provideStore(), providePersistStore()],
 * });
 * ```
 */
export declare const providePersistStore: <T extends ActionReducerMap<any, V>, V extends Action<string> = Action<string>>(config?: PersistStateRootConfig<T, V>) => EnvironmentProviders;
/**
 * Persists additional slices of state.
 * These providers cannot be used at the component level.
 *
 * @usageNotes
 *
 * ### Persist Store Features
 *
 * ```ts
 * const booksRoutes: Route[] = [
 *   {
 *     path: '',
 *     providers: [provideState('books', booksReducer), providePersistState({ key: 'books' })],
 *     children: [
 *       { path: '', component: BookListComponent },
 *       { path: ':id', component: BookDetailsComponent },
 *     ],
 *   },
 * ];
 * ```
 */
export declare const providePersistState: <T>(config: PersistStateFeatureConfig<T>) => EnvironmentProviders;
